
По предлагаемой БД "Заболеваемость" необходимо написать web-отчет.
Все, что не оговорено ниже - на усмотрение потенциального работника.
В случае непоняток и затыков имеет смысл самостоятельно упростить задание, выполнить его часть.
Необходимо предоставить исходники с комментариями хода мыслей.

Структура БД (файл morbidity.sql):
1. таблица территорий territory (id, name, parent_id) состоит из 3х уровней иерархии территорий: РФ, ФО, Субъект;
2. таблица госпиталей hospital (id, name, terr_id, adress, phone) содержит информацию по больницам и привязку их к территориям. Больницы могут быть привязаны только к территориям-субъектам (3й уровень иерархии);
3. таблица болезней disease (id, name) - справочник болезней;
4. таблица статистики statistics (hospital_id, disease_id, date, patients, issued) содержит информацию по заболевшим (patients) и выписанным (issued) пациентам в конкретной больнице по конкретному заболеванию на конкретную дату. Дата - число вида 20130401 - 1 апреля 2013 года.

Требования к отчету.
Отчет строится по параметрам (фильтрам): отчетный период (месяц) и федеральный округ.
Параметры по умолчанию: ФО - первый в списке, месяц - последний по которому есть данные.
Кнопка "Обновить", обновляющая отчет в соответствии с выбранными параметрами.

Необходимо сформировать таблицу.
Столбцы: наименование субъекта, наименование больницы, наименование болезни, число заболевших, число выздоровевших, тенденция (число выздоровевших -(минус) число заболевших).
Строки: все субъекты, больницы и болезни, по которым есть заболевшие и(или) выздоровевшие в выбранном федеральном округе за выбранный отчетный период.
Столбец "тенденция" необходимо раскрасить: число < 0 - красить красным, > 0 - зеленым

Языки и технологии:
- СУБД: mysql, mssql, postgresql и т.д. - все, что душе угодно, при трудностях с выбором - mysql.
- Серверная часть: php, c#, c++, delphi, java, ruby - все что душе угодно, при трудностях с выбором - php.
- Клиентская часть: html,css,js.

В двух словах как должно работать:
1. Изначально отчет открывается с параметрами по умолчанию;
2. При нажатии кнопки "обновить", выбранные параметры отправляются на сервер;
3. На сервере параметры подставляются в запрос;
4. Выполняется запрос к БД;
5. Обрабатывается результат запроса;
6. Формируется html-страничка с обновленной информацией;
7. Обновленная страница отображается в браузере.
